apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

def Properties properties = new Properties()

properties.load(new FileInputStream("build.properties"))

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "nokamoto.github.com.vrchandroid"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 5
        versionName "1.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField "String", "GRPC_HOST", "\"${properties.getProperty("grpc.host")}\""
            buildConfigField "String", "GRPC_PORT", "\"${properties.getProperty("grpc.port")}\""
            buildConfigField "String", "GRPC_APIKEY", "\"${properties.getProperty("grpc.apikey")}\""
            buildConfigField "String", "FCM_SERVERKEY", "\"${properties.getProperty("fcm.serverkey")}\""
            buildConfigField "String", "FIREBASE_STORAGE_REF", "\"${properties.getProperty("firebase.storage.ref")}\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "GRPC_HOST", "\"${properties.getProperty("grpc.host")}\""
            buildConfigField "String", "GRPC_PORT", "\"${properties.getProperty("grpc.port")}\""
            buildConfigField "String", "GRPC_APIKEY", "\"${properties.getProperty("grpc.apikey")}\""
            buildConfigField "String", "FCM_SERVERKEY", "\"${properties.getProperty("fcm.serverkey")}\""
            buildConfigField "String", "FIREBASE_STORAGE_REF", "\"${properties.getProperty("firebase.storage.ref")}\""
        }
    }

    configurations.all {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:2.0.1"
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //annotationProcessor 'com.github.bumptech.glide:compiler:3.7.0'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'io.grpc:grpc-okhttp:1.4.0'
    compile 'io.grpc:grpc-protobuf-lite:1.4.0'
    compile 'io.grpc:grpc-stub:1.4.0'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.google.firebase:firebase-messaging:10.0.1'
    compile 'com.google.android.gms:play-services-gcm:10.0.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.google.firebase:firebase-auth:10.0.1'
    compile 'com.google.firebase:firebase-database:10.0.1'
    compile 'com.google.firebase:firebase-storage:10.0.1'
    testCompile 'junit:junit:4.12'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.4.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            javalite {}
            grpc {
                // Options added to --grpc_out
                option 'lite'
            }
        }
    }
}
apply plugin: 'com.google.gms.google-services'