// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vrch/dialogue.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Vrch {

  /// <summary>Holder for reflection information generated from vrch/dialogue.proto</summary>
  public static partial class DialogueReflection {

    #region Descriptor
    /// <summary>File descriptor for vrch/dialogue.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DialogueReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN2cmNoL2RpYWxvZ3VlLnByb3RvEgR2cmNoGg92cmNoL3RleHQucHJvdG8i",
            "NQoIRGlhbG9ndWUSGAoEdGV4dBgBIAEoCzIKLnZyY2guVGV4dBIPCgdjb250",
            "ZXh0GAIgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Vrch.TextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Vrch.Dialogue), global::Vrch.Dialogue.Parser, new[]{ "Text", "Context" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Dialogue : pb::IMessage<Dialogue> {
    private static readonly pb::MessageParser<Dialogue> _parser = new pb::MessageParser<Dialogue>(() => new Dialogue());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dialogue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vrch.DialogueReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialogue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialogue(Dialogue other) : this() {
      Text = other.text_ != null ? other.Text.Clone() : null;
      context_ = other.context_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialogue Clone() {
      return new Dialogue(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private global::Vrch.Text text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Vrch.Text Text {
      get { return text_; }
      set {
        text_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 2;
    private string context_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dialogue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dialogue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Text, other.Text)) return false;
      if (Context != other.Context) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (text_ != null) hash ^= Text.GetHashCode();
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (text_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Text);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (text_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Text);
      }
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dialogue other) {
      if (other == null) {
        return;
      }
      if (other.text_ != null) {
        if (text_ == null) {
          text_ = new global::Vrch.Text();
        }
        Text.MergeFrom(other.Text);
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (text_ == null) {
              text_ = new global::Vrch.Text();
            }
            input.ReadMessage(text_);
            break;
          }
          case 18: {
            Context = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
